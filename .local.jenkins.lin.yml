
language: python

python:
  - { PATH: "{{Python37}}", VERSION: 3.7, DIST: std, PYINT: python3.7, PYTHONPATH: src }
  
virtualenv:
  - path: {{ospathjoin(root_path, pickname("$NAME_JENKINS", project_name + "_$VERSION_$DIST_$NAME"), "_venv")}}
  
install:
  - $PYINT -m pip install --upgrade pip
  - $PYINT -m pip install --no-cache-dir --no-deps --index http://localhost:8067/simple/ pyquickhelper pyensae pymmails pymyinstall pyrsslocal jyquickhelper ensae_teaching_cs mlinsights manydataapi pandas_streaming lightmlrestapi --extra-index-url=https://pypi.python.org/simple/
  - $PYINT -m pip install -r requirements_conda.txt
  - $PYINT -m pip install -r requirements.txt
  - $PYINT --version
  - $PYINT -m pip freeze

script:
  - { CMD: "$PYINT -u setup.py unittests -g \".*((code_style)|(LONG)|(SKIP)|(dummy_app)).*\"", NAME: "UT" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*code_style.*\"", NAME: "UT_STYLE" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*dummy_app[a-z_]+?keras.*\"", NAME: "UT_DUMMY_APP_KERAS" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*dummy_app[a-z_]+?torch.*\"", NAME: "UT_DUMMY_APP_TORCH" }
  - { CMD: "$PYINT -u setup.py unittests_LONG", NAME: "UT_LONG", TIMEOUT: 5000 }
  - { CMD: "$PYINT -u setup.py unittests -e \".*SKIP.*\" -g \".*rest_api.*\"", NAME: "UT_SKIP" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*rest_api.*\"", NAME: "UT_SKIP_REST_API" }

after_script:
  - $PYINT -u setup.py bdist_wheel
  - if [ ${VERSION} == "3.7" and ${DIST} != "conda" and ${NAME} == "UT" ] then cp dist/*.whl {{root_path}}/../local_pypi/local_pypi_server fi

documentation:
  - if [ ${NAME} == "UT" ] then $PYINT -u setup.py build_sphinx fi
  - if [ ${NAME} == "UT" ] then cp -R -f _doc/sphinxdoc/build/html dist/html fi
